ARM GAS  /tmp/ccdDfz0A.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"components.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.rti_start,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	rti_start:
  25              	.LFB15:
  26              		.file 1 "rt-thread/src/components.c"
   1:rt-thread/src/components.c **** /*
   2:rt-thread/src/components.c ****  * Copyright (c) 2006-2018, RT-Thread Development Team
   3:rt-thread/src/components.c ****  *
   4:rt-thread/src/components.c ****  * SPDX-License-Identifier: Apache-2.0
   5:rt-thread/src/components.c ****  *
   6:rt-thread/src/components.c ****  * Change Logs:
   7:rt-thread/src/components.c ****  * Date           Author       Notes
   8:rt-thread/src/components.c ****  * 2012-09-20     Bernard      Change the name to components.c
   9:rt-thread/src/components.c ****  *                             And all components related header files.
  10:rt-thread/src/components.c ****  * 2012-12-23     Bernard      fix the pthread initialization issue.
  11:rt-thread/src/components.c ****  * 2013-06-23     Bernard      Add the init_call for components initialization.
  12:rt-thread/src/components.c ****  * 2013-07-05     Bernard      Remove initialization feature for MS VC++ compiler
  13:rt-thread/src/components.c ****  * 2015-02-06     Bernard      Remove the MS VC++ support and move to the kernel
  14:rt-thread/src/components.c ****  * 2015-05-04     Bernard      Rename it to components.c because compiling issue
  15:rt-thread/src/components.c ****  *                             in some IDEs.
  16:rt-thread/src/components.c ****  * 2015-07-29     Arda.Fu      Add support to use RT_USING_USER_MAIN with IAR
  17:rt-thread/src/components.c ****  * 2018-11-22     Jesven       Add secondary cpu boot up
  18:rt-thread/src/components.c ****  */
  19:rt-thread/src/components.c **** 
  20:rt-thread/src/components.c **** #include <rthw.h>
  21:rt-thread/src/components.c **** #include <rtthread.h>
  22:rt-thread/src/components.c **** 
  23:rt-thread/src/components.c **** #ifdef RT_USING_USER_MAIN
  24:rt-thread/src/components.c **** #ifndef RT_MAIN_THREAD_STACK_SIZE
  25:rt-thread/src/components.c **** #define RT_MAIN_THREAD_STACK_SIZE     2048
  26:rt-thread/src/components.c **** #endif
  27:rt-thread/src/components.c **** #ifndef RT_MAIN_THREAD_PRIORITY
  28:rt-thread/src/components.c **** #define RT_MAIN_THREAD_PRIORITY       (RT_THREAD_PRIORITY_MAX / 3)
  29:rt-thread/src/components.c **** #endif
  30:rt-thread/src/components.c **** #endif
  31:rt-thread/src/components.c **** 
  32:rt-thread/src/components.c **** #ifdef RT_USING_COMPONENTS_INIT
ARM GAS  /tmp/ccdDfz0A.s 			page 2


  33:rt-thread/src/components.c **** /*
  34:rt-thread/src/components.c ****  * Components Initialization will initialize some driver and components as following
  35:rt-thread/src/components.c ****  * order:
  36:rt-thread/src/components.c ****  * rti_start         --> 0
  37:rt-thread/src/components.c ****  * BOARD_EXPORT      --> 1
  38:rt-thread/src/components.c ****  * rti_board_end     --> 1.end
  39:rt-thread/src/components.c ****  *
  40:rt-thread/src/components.c ****  * DEVICE_EXPORT     --> 2
  41:rt-thread/src/components.c ****  * COMPONENT_EXPORT  --> 3
  42:rt-thread/src/components.c ****  * FS_EXPORT         --> 4
  43:rt-thread/src/components.c ****  * ENV_EXPORT        --> 5
  44:rt-thread/src/components.c ****  * APP_EXPORT        --> 6
  45:rt-thread/src/components.c ****  *
  46:rt-thread/src/components.c ****  * rti_end           --> 6.end
  47:rt-thread/src/components.c ****  *
  48:rt-thread/src/components.c ****  * These automatically initialization, the driver or component initial function must
  49:rt-thread/src/components.c ****  * be defined with:
  50:rt-thread/src/components.c ****  * INIT_BOARD_EXPORT(fn);
  51:rt-thread/src/components.c ****  * INIT_DEVICE_EXPORT(fn);
  52:rt-thread/src/components.c ****  * ...
  53:rt-thread/src/components.c ****  * INIT_APP_EXPORT(fn);
  54:rt-thread/src/components.c ****  * etc.
  55:rt-thread/src/components.c ****  */
  56:rt-thread/src/components.c **** static int rti_start(void)
  57:rt-thread/src/components.c **** {
  27              		.loc 1 57 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  58:rt-thread/src/components.c ****     return 0;
  59:rt-thread/src/components.c **** }
  32              		.loc 1 59 0
  33 0000 0020     		movs	r0, #0
  34 0002 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE15:
  38              		.section	.text.rti_board_start,"ax",%progbits
  39              		.align	1
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	rti_board_start:
  46              	.LFB16:
  60:rt-thread/src/components.c **** INIT_EXPORT(rti_start, "0");
  61:rt-thread/src/components.c **** 
  62:rt-thread/src/components.c **** static int rti_board_start(void)
  63:rt-thread/src/components.c **** {
  47              		.loc 1 63 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  64:rt-thread/src/components.c ****     return 0;
  65:rt-thread/src/components.c **** }
  52              		.loc 1 65 0
ARM GAS  /tmp/ccdDfz0A.s 			page 3


  53 0000 0020     		movs	r0, #0
  54 0002 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE16:
  58              		.section	.text.rti_board_end,"ax",%progbits
  59              		.align	1
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv4-sp-d16
  65              	rti_board_end:
  66              	.LFB17:
  66:rt-thread/src/components.c **** INIT_EXPORT(rti_board_start, "0.end");
  67:rt-thread/src/components.c **** 
  68:rt-thread/src/components.c **** static int rti_board_end(void)
  69:rt-thread/src/components.c **** {
  67              		.loc 1 69 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  70:rt-thread/src/components.c ****     return 0;
  71:rt-thread/src/components.c **** }
  72              		.loc 1 71 0
  73 0000 0020     		movs	r0, #0
  74 0002 7047     		bx	lr
  75              		.cfi_endproc
  76              	.LFE17:
  78              		.section	.text.rti_end,"ax",%progbits
  79              		.align	1
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu fpv4-sp-d16
  85              	rti_end:
  86              	.LFB18:
  72:rt-thread/src/components.c **** INIT_EXPORT(rti_board_end, "1.end");
  73:rt-thread/src/components.c **** 
  74:rt-thread/src/components.c **** static int rti_end(void)
  75:rt-thread/src/components.c **** {
  87              		.loc 1 75 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  76:rt-thread/src/components.c ****     return 0;
  77:rt-thread/src/components.c **** }
  92              		.loc 1 77 0
  93 0000 0020     		movs	r0, #0
  94 0002 7047     		bx	lr
  95              		.cfi_endproc
  96              	.LFE18:
  98              		.section	.text.rt_components_board_init,"ax",%progbits
  99              		.align	1
 100              		.global	rt_components_board_init
 101              		.syntax unified
 102              		.thumb
ARM GAS  /tmp/ccdDfz0A.s 			page 4


 103              		.thumb_func
 104              		.fpu fpv4-sp-d16
 106              	rt_components_board_init:
 107              	.LFB19:
  78:rt-thread/src/components.c **** INIT_EXPORT(rti_end, "6.end");
  79:rt-thread/src/components.c **** 
  80:rt-thread/src/components.c **** /**
  81:rt-thread/src/components.c ****  * RT-Thread Components Initialization for board
  82:rt-thread/src/components.c ****  */
  83:rt-thread/src/components.c **** void rt_components_board_init(void)
  84:rt-thread/src/components.c **** {
 108              		.loc 1 84 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112 0000 10B5     		push	{r4, lr}
 113              	.LCFI0:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
  85:rt-thread/src/components.c **** #if RT_DEBUG_INIT
  86:rt-thread/src/components.c ****     int result;
  87:rt-thread/src/components.c ****     const struct rt_init_desc *desc;
  88:rt-thread/src/components.c ****     for (desc = &__rt_init_desc_rti_board_start; desc < &__rt_init_desc_rti_board_end; desc ++)
  89:rt-thread/src/components.c ****     {
  90:rt-thread/src/components.c ****         rt_kprintf("initialize %s", desc->fn_name);
  91:rt-thread/src/components.c ****         result = desc->fn();
  92:rt-thread/src/components.c ****         rt_kprintf(":%d done\n", result);
  93:rt-thread/src/components.c ****     }
  94:rt-thread/src/components.c **** #else
  95:rt-thread/src/components.c ****     const init_fn_t *fn_ptr;
  96:rt-thread/src/components.c **** 
  97:rt-thread/src/components.c ****     for (fn_ptr = &__rt_init_rti_board_start; fn_ptr < &__rt_init_rti_board_end; fn_ptr++)
 117              		.loc 1 97 0
 118 0002 044C     		ldr	r4, .L9
 119 0004 02E0     		b	.L6
 120              	.LVL0:
 121              	.L7:
  98:rt-thread/src/components.c ****     {
  99:rt-thread/src/components.c ****         (*fn_ptr)();
 122              		.loc 1 99 0 discriminator 3
 123 0006 54F8043B 		ldr	r3, [r4], #4
 124              	.LVL1:
 125 000a 9847     		blx	r3
 126              	.LVL2:
 127              	.L6:
  97:rt-thread/src/components.c ****     {
 128              		.loc 1 97 0 discriminator 1
 129 000c 024B     		ldr	r3, .L9+4
 130 000e 9C42     		cmp	r4, r3
 131 0010 F9D3     		bcc	.L7
 100:rt-thread/src/components.c ****     }
 101:rt-thread/src/components.c **** #endif
 102:rt-thread/src/components.c **** }
 132              		.loc 1 102 0
 133 0012 10BD     		pop	{r4, pc}
 134              	.LVL3:
ARM GAS  /tmp/ccdDfz0A.s 			page 5


 135              	.L10:
 136              		.align	2
 137              	.L9:
 138 0014 00000000 		.word	.LANCHOR0
 139 0018 00000000 		.word	.LANCHOR1
 140              		.cfi_endproc
 141              	.LFE19:
 143              		.section	.text.rt_components_init,"ax",%progbits
 144              		.align	1
 145              		.global	rt_components_init
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu fpv4-sp-d16
 151              	rt_components_init:
 152              	.LFB20:
 103:rt-thread/src/components.c **** 
 104:rt-thread/src/components.c **** /**
 105:rt-thread/src/components.c ****  * RT-Thread Components Initialization
 106:rt-thread/src/components.c ****  */
 107:rt-thread/src/components.c **** void rt_components_init(void)
 108:rt-thread/src/components.c **** {
 153              		.loc 1 108 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157 0000 10B5     		push	{r4, lr}
 158              	.LCFI1:
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 4, -8
 161              		.cfi_offset 14, -4
 109:rt-thread/src/components.c **** #if RT_DEBUG_INIT
 110:rt-thread/src/components.c ****     int result;
 111:rt-thread/src/components.c ****     const struct rt_init_desc *desc;
 112:rt-thread/src/components.c **** 
 113:rt-thread/src/components.c ****     rt_kprintf("do components initialization.\n");
 114:rt-thread/src/components.c ****     for (desc = &__rt_init_desc_rti_board_end; desc < &__rt_init_desc_rti_end; desc ++)
 115:rt-thread/src/components.c ****     {
 116:rt-thread/src/components.c ****         rt_kprintf("initialize %s", desc->fn_name);
 117:rt-thread/src/components.c ****         result = desc->fn();
 118:rt-thread/src/components.c ****         rt_kprintf(":%d done\n", result);
 119:rt-thread/src/components.c ****     }
 120:rt-thread/src/components.c **** #else
 121:rt-thread/src/components.c ****     const init_fn_t *fn_ptr;
 122:rt-thread/src/components.c **** 
 123:rt-thread/src/components.c ****     for (fn_ptr = &__rt_init_rti_board_end; fn_ptr < &__rt_init_rti_end; fn_ptr ++)
 162              		.loc 1 123 0
 163 0002 044C     		ldr	r4, .L15
 164 0004 02E0     		b	.L12
 165              	.LVL4:
 166              	.L13:
 124:rt-thread/src/components.c ****     {
 125:rt-thread/src/components.c ****         (*fn_ptr)();
 167              		.loc 1 125 0 discriminator 3
 168 0006 54F8043B 		ldr	r3, [r4], #4
 169              	.LVL5:
 170 000a 9847     		blx	r3
ARM GAS  /tmp/ccdDfz0A.s 			page 6


 171              	.LVL6:
 172              	.L12:
 123:rt-thread/src/components.c ****     {
 173              		.loc 1 123 0 discriminator 1
 174 000c 024B     		ldr	r3, .L15+4
 175 000e 9C42     		cmp	r4, r3
 176 0010 F9D3     		bcc	.L13
 126:rt-thread/src/components.c ****     }
 127:rt-thread/src/components.c **** #endif
 128:rt-thread/src/components.c **** }
 177              		.loc 1 128 0
 178 0012 10BD     		pop	{r4, pc}
 179              	.LVL7:
 180              	.L16:
 181              		.align	2
 182              	.L15:
 183 0014 00000000 		.word	.LANCHOR1
 184 0018 00000000 		.word	.LANCHOR2
 185              		.cfi_endproc
 186              	.LFE20:
 188              		.section	.text.main_thread_entry,"ax",%progbits
 189              		.align	1
 190              		.global	main_thread_entry
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu fpv4-sp-d16
 196              	main_thread_entry:
 197              	.LFB22:
 129:rt-thread/src/components.c **** #endif   /* RT_USING_COMPONENTS_INIT */
 130:rt-thread/src/components.c **** 
 131:rt-thread/src/components.c **** #ifdef RT_USING_USER_MAIN
 132:rt-thread/src/components.c **** 
 133:rt-thread/src/components.c **** void rt_application_init(void);
 134:rt-thread/src/components.c **** void rt_hw_board_init(void);
 135:rt-thread/src/components.c **** int rtthread_startup(void);
 136:rt-thread/src/components.c **** 
 137:rt-thread/src/components.c **** #if defined(__CC_ARM) || defined(__CLANG_ARM)
 138:rt-thread/src/components.c **** extern int $Super$$main(void);
 139:rt-thread/src/components.c **** /* re-define main function */
 140:rt-thread/src/components.c **** int $Sub$$main(void)
 141:rt-thread/src/components.c **** {
 142:rt-thread/src/components.c ****     rtthread_startup();
 143:rt-thread/src/components.c ****     return 0;
 144:rt-thread/src/components.c **** }
 145:rt-thread/src/components.c **** #elif defined(__ICCARM__)
 146:rt-thread/src/components.c **** extern int main(void);
 147:rt-thread/src/components.c **** /* __low_level_init will auto called by IAR cstartup */
 148:rt-thread/src/components.c **** extern void __iar_data_init3(void);
 149:rt-thread/src/components.c **** int __low_level_init(void)
 150:rt-thread/src/components.c **** {
 151:rt-thread/src/components.c ****     // call IAR table copy function.
 152:rt-thread/src/components.c ****     __iar_data_init3();
 153:rt-thread/src/components.c ****     rtthread_startup();
 154:rt-thread/src/components.c ****     return 0;
 155:rt-thread/src/components.c **** }
 156:rt-thread/src/components.c **** #elif defined(__GNUC__)
ARM GAS  /tmp/ccdDfz0A.s 			page 7


 157:rt-thread/src/components.c **** /* Add -eentry to arm-none-eabi-gcc argument */
 158:rt-thread/src/components.c **** int entry(void)
 159:rt-thread/src/components.c **** {
 160:rt-thread/src/components.c ****     rtthread_startup();
 161:rt-thread/src/components.c ****     return 0;
 162:rt-thread/src/components.c **** }
 163:rt-thread/src/components.c **** #endif
 164:rt-thread/src/components.c **** 
 165:rt-thread/src/components.c **** #ifndef RT_USING_HEAP
 166:rt-thread/src/components.c **** /* if there is not enable heap, we should use static thread and stack. */
 167:rt-thread/src/components.c **** ALIGN(8)
 168:rt-thread/src/components.c **** static rt_uint8_t main_stack[RT_MAIN_THREAD_STACK_SIZE];
 169:rt-thread/src/components.c **** struct rt_thread main_thread;
 170:rt-thread/src/components.c **** #endif
 171:rt-thread/src/components.c **** 
 172:rt-thread/src/components.c **** /* the system main thread */
 173:rt-thread/src/components.c **** void main_thread_entry(void *parameter)
 174:rt-thread/src/components.c **** {
 198              		.loc 1 174 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              	.LVL8:
 203 0000 08B5     		push	{r3, lr}
 204              	.LCFI2:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
 175:rt-thread/src/components.c ****     extern int main(void);
 176:rt-thread/src/components.c ****     extern int $Super$$main(void);
 177:rt-thread/src/components.c ****     
 178:rt-thread/src/components.c **** #ifdef RT_USING_COMPONENTS_INIT
 179:rt-thread/src/components.c ****     /* RT-Thread components initialization */
 180:rt-thread/src/components.c ****     rt_components_init();
 208              		.loc 1 180 0
 209 0002 FFF7FEFF 		bl	rt_components_init
 210              	.LVL9:
 181:rt-thread/src/components.c **** #endif    
 182:rt-thread/src/components.c **** #ifdef RT_USING_SMP
 183:rt-thread/src/components.c ****     rt_hw_secondary_cpu_up();
 184:rt-thread/src/components.c **** #endif
 185:rt-thread/src/components.c ****     /* invoke system main function */
 186:rt-thread/src/components.c **** #if defined(__CC_ARM) || defined(__CLANG_ARM)
 187:rt-thread/src/components.c ****     $Super$$main(); /* for ARMCC. */
 188:rt-thread/src/components.c **** #elif defined(__ICCARM__) || defined(__GNUC__)
 189:rt-thread/src/components.c ****     main();
 211              		.loc 1 189 0
 212 0006 FFF7FEFF 		bl	main
 213              	.LVL10:
 214 000a 08BD     		pop	{r3, pc}
 215              		.cfi_endproc
 216              	.LFE22:
 218              		.section	.text.rt_application_init,"ax",%progbits
 219              		.align	1
 220              		.global	rt_application_init
 221              		.syntax unified
 222              		.thumb
ARM GAS  /tmp/ccdDfz0A.s 			page 8


 223              		.thumb_func
 224              		.fpu fpv4-sp-d16
 226              	rt_application_init:
 227              	.LFB23:
 190:rt-thread/src/components.c **** #endif
 191:rt-thread/src/components.c **** }
 192:rt-thread/src/components.c **** 
 193:rt-thread/src/components.c **** void rt_application_init(void)
 194:rt-thread/src/components.c **** {
 228              		.loc 1 194 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 10B5     		push	{r4, lr}
 233              	.LCFI3:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 4, -8
 236              		.cfi_offset 14, -4
 237 0002 82B0     		sub	sp, sp, #8
 238              	.LCFI4:
 239              		.cfi_def_cfa_offset 16
 195:rt-thread/src/components.c ****     rt_thread_t tid;
 196:rt-thread/src/components.c **** 
 197:rt-thread/src/components.c **** #ifdef RT_USING_HEAP
 198:rt-thread/src/components.c ****     tid = rt_thread_create("main", main_thread_entry, RT_NULL,
 240              		.loc 1 198 0
 241 0004 1423     		movs	r3, #20
 242 0006 0193     		str	r3, [sp, #4]
 243 0008 0A23     		movs	r3, #10
 244 000a 0093     		str	r3, [sp]
 245 000c 4FF40073 		mov	r3, #512
 246 0010 0022     		movs	r2, #0
 247 0012 0849     		ldr	r1, .L23
 248 0014 0848     		ldr	r0, .L23+4
 249 0016 FFF7FEFF 		bl	rt_thread_create
 250              	.LVL11:
 199:rt-thread/src/components.c ****                            RT_MAIN_THREAD_STACK_SIZE, RT_MAIN_THREAD_PRIORITY, 20);
 200:rt-thread/src/components.c ****     RT_ASSERT(tid != RT_NULL);
 251              		.loc 1 200 0
 252 001a 0446     		mov	r4, r0
 253 001c 20B1     		cbz	r0, .L22
 254              	.LVL12:
 255              	.L20:
 201:rt-thread/src/components.c **** #else
 202:rt-thread/src/components.c ****     rt_err_t result;
 203:rt-thread/src/components.c **** 
 204:rt-thread/src/components.c ****     tid = &main_thread;
 205:rt-thread/src/components.c ****     result = rt_thread_init(tid, "main", main_thread_entry, RT_NULL,
 206:rt-thread/src/components.c ****                             main_stack, sizeof(main_stack), RT_MAIN_THREAD_PRIORITY, 20);
 207:rt-thread/src/components.c ****     RT_ASSERT(result == RT_EOK);
 208:rt-thread/src/components.c **** 
 209:rt-thread/src/components.c ****     /* if not define RT_USING_HEAP, using to eliminate the warning */
 210:rt-thread/src/components.c ****     (void)result;
 211:rt-thread/src/components.c **** #endif
 212:rt-thread/src/components.c **** 
 213:rt-thread/src/components.c ****     rt_thread_startup(tid);
 256              		.loc 1 213 0
ARM GAS  /tmp/ccdDfz0A.s 			page 9


 257 001e 2046     		mov	r0, r4
 258 0020 FFF7FEFF 		bl	rt_thread_startup
 259              	.LVL13:
 214:rt-thread/src/components.c **** }
 260              		.loc 1 214 0
 261 0024 02B0     		add	sp, sp, #8
 262              	.LCFI5:
 263              		.cfi_remember_state
 264              		.cfi_def_cfa_offset 8
 265              		@ sp needed
 266 0026 10BD     		pop	{r4, pc}
 267              	.LVL14:
 268              	.L22:
 269              	.LCFI6:
 270              		.cfi_restore_state
 200:rt-thread/src/components.c **** #else
 271              		.loc 1 200 0 discriminator 1
 272 0028 C822     		movs	r2, #200
 273 002a 0449     		ldr	r1, .L23+8
 274 002c 0448     		ldr	r0, .L23+12
 275              	.LVL15:
 276 002e FFF7FEFF 		bl	rt_assert_handler
 277              	.LVL16:
 278 0032 F4E7     		b	.L20
 279              	.L24:
 280              		.align	2
 281              	.L23:
 282 0034 00000000 		.word	main_thread_entry
 283 0038 00000000 		.word	.LC0
 284 003c 00000000 		.word	.LANCHOR3
 285 0040 08000000 		.word	.LC1
 286              		.cfi_endproc
 287              	.LFE23:
 289              		.section	.text.rtthread_startup,"ax",%progbits
 290              		.align	1
 291              		.global	rtthread_startup
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 295              		.fpu fpv4-sp-d16
 297              	rtthread_startup:
 298              	.LFB24:
 215:rt-thread/src/components.c **** 
 216:rt-thread/src/components.c **** int rtthread_startup(void)
 217:rt-thread/src/components.c **** {
 299              		.loc 1 217 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303 0000 08B5     		push	{r3, lr}
 304              	.LCFI7:
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 3, -8
 307              		.cfi_offset 14, -4
 218:rt-thread/src/components.c ****     rt_hw_interrupt_disable();
 308              		.loc 1 218 0
 309 0002 FFF7FEFF 		bl	rt_hw_interrupt_disable
ARM GAS  /tmp/ccdDfz0A.s 			page 10


 310              	.LVL17:
 219:rt-thread/src/components.c **** 
 220:rt-thread/src/components.c ****     /* board level initialization
 221:rt-thread/src/components.c ****      * NOTE: please initialize heap inside board initialization.
 222:rt-thread/src/components.c ****      */
 223:rt-thread/src/components.c ****     rt_hw_board_init();
 311              		.loc 1 223 0
 312 0006 FFF7FEFF 		bl	rt_hw_board_init
 313              	.LVL18:
 224:rt-thread/src/components.c **** 
 225:rt-thread/src/components.c ****     /* show RT-Thread version */
 226:rt-thread/src/components.c ****     rt_show_version();
 314              		.loc 1 226 0
 315 000a FFF7FEFF 		bl	rt_show_version
 316              	.LVL19:
 227:rt-thread/src/components.c **** 
 228:rt-thread/src/components.c ****     /* timer system initialization */
 229:rt-thread/src/components.c ****     rt_system_timer_init();
 317              		.loc 1 229 0
 318 000e FFF7FEFF 		bl	rt_system_timer_init
 319              	.LVL20:
 230:rt-thread/src/components.c **** 
 231:rt-thread/src/components.c ****     /* scheduler system initialization */
 232:rt-thread/src/components.c ****     rt_system_scheduler_init();
 320              		.loc 1 232 0
 321 0012 FFF7FEFF 		bl	rt_system_scheduler_init
 322              	.LVL21:
 233:rt-thread/src/components.c **** 
 234:rt-thread/src/components.c **** #ifdef RT_USING_SIGNALS
 235:rt-thread/src/components.c ****     /* signal system initialization */
 236:rt-thread/src/components.c ****     rt_system_signal_init();
 237:rt-thread/src/components.c **** #endif
 238:rt-thread/src/components.c **** 
 239:rt-thread/src/components.c ****     /* create init_thread */
 240:rt-thread/src/components.c ****     rt_application_init();
 323              		.loc 1 240 0
 324 0016 FFF7FEFF 		bl	rt_application_init
 325              	.LVL22:
 241:rt-thread/src/components.c **** 
 242:rt-thread/src/components.c ****     /* timer thread initialization */
 243:rt-thread/src/components.c ****     rt_system_timer_thread_init();
 326              		.loc 1 243 0
 327 001a FFF7FEFF 		bl	rt_system_timer_thread_init
 328              	.LVL23:
 244:rt-thread/src/components.c **** 
 245:rt-thread/src/components.c ****     /* idle thread initialization */
 246:rt-thread/src/components.c ****     rt_thread_idle_init();
 329              		.loc 1 246 0
 330 001e FFF7FEFF 		bl	rt_thread_idle_init
 331              	.LVL24:
 247:rt-thread/src/components.c **** 
 248:rt-thread/src/components.c **** #ifdef RT_USING_SMP
 249:rt-thread/src/components.c ****     rt_hw_spin_lock(&_cpus_lock);
 250:rt-thread/src/components.c **** #endif /*RT_USING_SMP*/
 251:rt-thread/src/components.c **** 
 252:rt-thread/src/components.c ****     /* start scheduler */
 253:rt-thread/src/components.c ****     rt_system_scheduler_start();
ARM GAS  /tmp/ccdDfz0A.s 			page 11


 332              		.loc 1 253 0
 333 0022 FFF7FEFF 		bl	rt_system_scheduler_start
 334              	.LVL25:
 254:rt-thread/src/components.c **** 
 255:rt-thread/src/components.c ****     /* never reach here */
 256:rt-thread/src/components.c ****     return 0;
 257:rt-thread/src/components.c **** }
 335              		.loc 1 257 0
 336 0026 0020     		movs	r0, #0
 337 0028 08BD     		pop	{r3, pc}
 338              		.cfi_endproc
 339              	.LFE24:
 341              		.section	.text.entry,"ax",%progbits
 342              		.align	1
 343              		.global	entry
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 347              		.fpu fpv4-sp-d16
 349              	entry:
 350              	.LFB21:
 159:rt-thread/src/components.c ****     rtthread_startup();
 351              		.loc 1 159 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355 0000 08B5     		push	{r3, lr}
 356              	.LCFI8:
 357              		.cfi_def_cfa_offset 8
 358              		.cfi_offset 3, -8
 359              		.cfi_offset 14, -4
 160:rt-thread/src/components.c ****     return 0;
 360              		.loc 1 160 0
 361 0002 FFF7FEFF 		bl	rtthread_startup
 362              	.LVL26:
 162:rt-thread/src/components.c **** #endif
 363              		.loc 1 162 0
 364 0006 0020     		movs	r0, #0
 365 0008 08BD     		pop	{r3, pc}
 366              		.cfi_endproc
 367              	.LFE21:
 369              		.global	__rt_init_rti_end
 370              		.global	__rt_init_rti_board_end
 371              		.global	__rt_init_rti_board_start
 372              		.global	__rt_init_rti_start
 373              		.section	.rodata.__FUNCTION__.6565,"a",%progbits
 374              		.align	2
 375              		.set	.LANCHOR3,. + 0
 378              	__FUNCTION__.6565:
 379 0000 72745F61 		.ascii	"rt_application_init\000"
 379      70706C69 
 379      63617469 
 379      6F6E5F69 
 379      6E697400 
 380              		.section	.rodata.rt_application_init.str1.4,"aMS",%progbits,1
 381              		.align	2
 382              	.LC0:
ARM GAS  /tmp/ccdDfz0A.s 			page 12


 383 0000 6D61696E 		.ascii	"main\000"
 383      00
 384 0005 000000   		.space	3
 385              	.LC1:
 386 0008 74696420 		.ascii	"tid != RT_NULL\000"
 386      213D2052 
 386      545F4E55 
 386      4C4C00
 387              		.section	.rti_fn.0,"a",%progbits
 388              		.align	2
 391              	__rt_init_rti_start:
 392 0000 00000000 		.word	rti_start
 393              		.section	.rti_fn.0.end,"a",%progbits
 394              		.align	2
 395              		.set	.LANCHOR0,. + 0
 398              	__rt_init_rti_board_start:
 399 0000 00000000 		.word	rti_board_start
 400              		.section	.rti_fn.1.end,"a",%progbits
 401              		.align	2
 402              		.set	.LANCHOR1,. + 0
 405              	__rt_init_rti_board_end:
 406 0000 00000000 		.word	rti_board_end
 407              		.section	.rti_fn.6.end,"a",%progbits
 408              		.align	2
 409              		.set	.LANCHOR2,. + 0
 412              	__rt_init_rti_end:
 413 0000 00000000 		.word	rti_end
 414              		.text
 415              	.Letext0:
 416              		.file 2 "rt-thread/include/rtdef.h"
 417              		.file 3 "/opt/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/lock.h"
 418              		.file 4 "/opt/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_types.h"
 419              		.file 5 "/opt/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 420              		.file 6 "/opt/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/reent.h"
 421              		.file 7 "/opt/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/time.h"
 422              		.file 8 "/opt/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/errno.h"
 423              		.file 9 "rt-thread/include/rtthread.h"
 424              		.file 10 "rt-thread/include/rthw.h"
ARM GAS  /tmp/ccdDfz0A.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 components.c
     /tmp/ccdDfz0A.s:18     .text.rti_start:0000000000000000 $t
     /tmp/ccdDfz0A.s:24     .text.rti_start:0000000000000000 rti_start
     /tmp/ccdDfz0A.s:39     .text.rti_board_start:0000000000000000 $t
     /tmp/ccdDfz0A.s:45     .text.rti_board_start:0000000000000000 rti_board_start
     /tmp/ccdDfz0A.s:59     .text.rti_board_end:0000000000000000 $t
     /tmp/ccdDfz0A.s:65     .text.rti_board_end:0000000000000000 rti_board_end
     /tmp/ccdDfz0A.s:79     .text.rti_end:0000000000000000 $t
     /tmp/ccdDfz0A.s:85     .text.rti_end:0000000000000000 rti_end
     /tmp/ccdDfz0A.s:99     .text.rt_components_board_init:0000000000000000 $t
     /tmp/ccdDfz0A.s:106    .text.rt_components_board_init:0000000000000000 rt_components_board_init
     /tmp/ccdDfz0A.s:138    .text.rt_components_board_init:0000000000000014 $d
     /tmp/ccdDfz0A.s:144    .text.rt_components_init:0000000000000000 $t
     /tmp/ccdDfz0A.s:151    .text.rt_components_init:0000000000000000 rt_components_init
     /tmp/ccdDfz0A.s:183    .text.rt_components_init:0000000000000014 $d
     /tmp/ccdDfz0A.s:189    .text.main_thread_entry:0000000000000000 $t
     /tmp/ccdDfz0A.s:196    .text.main_thread_entry:0000000000000000 main_thread_entry
     /tmp/ccdDfz0A.s:219    .text.rt_application_init:0000000000000000 $t
     /tmp/ccdDfz0A.s:226    .text.rt_application_init:0000000000000000 rt_application_init
     /tmp/ccdDfz0A.s:282    .text.rt_application_init:0000000000000034 $d
     /tmp/ccdDfz0A.s:290    .text.rtthread_startup:0000000000000000 $t
     /tmp/ccdDfz0A.s:297    .text.rtthread_startup:0000000000000000 rtthread_startup
     /tmp/ccdDfz0A.s:342    .text.entry:0000000000000000 $t
     /tmp/ccdDfz0A.s:349    .text.entry:0000000000000000 entry
     /tmp/ccdDfz0A.s:412    .rti_fn.6.end:0000000000000000 __rt_init_rti_end
     /tmp/ccdDfz0A.s:405    .rti_fn.1.end:0000000000000000 __rt_init_rti_board_end
     /tmp/ccdDfz0A.s:398    .rti_fn.0.end:0000000000000000 __rt_init_rti_board_start
     /tmp/ccdDfz0A.s:391    .rti_fn.0:0000000000000000 __rt_init_rti_start
     /tmp/ccdDfz0A.s:374    .rodata.__FUNCTION__.6565:0000000000000000 $d
     /tmp/ccdDfz0A.s:378    .rodata.__FUNCTION__.6565:0000000000000000 __FUNCTION__.6565
     /tmp/ccdDfz0A.s:381    .rodata.rt_application_init.str1.4:0000000000000000 $d
     /tmp/ccdDfz0A.s:388    .rti_fn.0:0000000000000000 $d
     /tmp/ccdDfz0A.s:394    .rti_fn.0.end:0000000000000000 $d
     /tmp/ccdDfz0A.s:401    .rti_fn.1.end:0000000000000000 $d
     /tmp/ccdDfz0A.s:408    .rti_fn.6.end:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
main
rt_thread_create
rt_thread_startup
rt_assert_handler
rt_hw_interrupt_disable
rt_hw_board_init
rt_show_version
rt_system_timer_init
rt_system_scheduler_init
rt_system_timer_thread_init
rt_thread_idle_init
rt_system_scheduler_start
